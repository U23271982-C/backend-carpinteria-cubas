services:
  db_mysql:
    container_name: db_mysql_container
    image: mysql:8.0
    ports:
      - "${SERVICE_MYSQL_PORT}:${SERVICE_MYSQL_PORT}"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS_MAIN_DEV}
      MYSQL_DATABASE: ${SERVICE_MYSQL_DATABASE}
      MYSQL_ALLOW_EMPTY_PASSWORD: no
    volumes:
      - mysql_data:/var/lib/mysql # ← Volumen Nombrado
  db_postgresql:
    container_name: db_postgresql_container
    image: postgres:16
    ports:
      - "${SERVICE_POSTGRESQL_PORT}:${SERVICE_POSTGRESQL_PORT}"
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER_MAIN_DEV}
      POSTGRES_PASSWORD: ${POSTGRESQL_PASS_MAIN_DEV}
    volumes:
      - postgres_data:/var/lib/postgresql # ← Volumen Nombrado PostgreSQL
  discovery-service:
    container_name: discovery-service-container
    image: discovery-service-image
    build:
      context: .
      dockerfile: descubridor-servicio/Dockerfile
    ports:
      - "${DISCOVERY_SERVICE_PORT}:${DISCOVERY_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${DISCOVERY_SERVICE_PORT}

  employee-service:
    container_name: employee-service-container
    image: employee-service-image
    build:
      context: .
      dockerfile: employee-service/Dockerfile
    ports:
      - "${EMPLOYEE_SERVICE_PORT}:${EMPLOYEE_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${EMPLOYEE_SERVICE_PORT}
      DISCOVERY_SERVER_URL: ${DISCOVERY_SERVICE_EXTERNAL_URL}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_EMPLOYEE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_MAIN_DEV}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASS_MAIN_DEV}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SHOW_SQL}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${DIALECT}
    depends_on:
      - discovery-service
      - db_mysql
  inventory-stock-service:
    container_name: inventary-stock-service-container
    image: inventary-stock-service-image
    build:
      context: .
      dockerfile: inventario-stock-servicio/Dockerfile
    ports:
      - "${INVENTORY_SOTCK_SERVICE_PORT}:${INVENTORY_SOTCK_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${INVENTORY_SOTCK_SERVICE_PORT}
      DISCOVERY_SERVER_URL: ${DISCOVERY_SERVICE_EXTERNAL_URL}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_INVENTORY_STOCK}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_MAIN_DEV}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASS_MAIN_DEV}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SHOW_SQL}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${DIALECT}
    depends_on:
     - discovery-service
     - db_mysql
     - employee-service
  sale-service:
    container_name: sale-service-container
    image: sale-service-image
    build:
      context: .
      dockerfile: sale-service/Dockerfile
    ports:
      - "${SALE_SERVICE_PORT}:${SALE_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${SALE_SERVICE_PORT}
      DISCOVERY_SERVER_URL: ${DISCOVERY_SERVICE_EXTERNAL_URL}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_SALE}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_MAIN_DEV}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASS_MAIN_DEV}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SHOW_SQL}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${DIALECT}
    depends_on:
      - discovery-service
      - db_mysql
      - employee-service
      - inventory-stock-service
  authentication-service:
    container_name: authentication-service-container
    image: authentication-service-image
    build:
      context: .
      dockerfile: authentication-service/Dockerfile
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:${AUTHENTICATION_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${AUTHENTICATION_SERVICE_PORT}
      DISCOVERY_SERVER_URL: ${DISCOVERY_SERVICE_EXTERNAL_URL}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL_AUTHENTICATION}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER_MAIN_DEV}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASS_MAIN_DEV}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${DDL_AUTO}
      SPRING_JPA_SHOW_SQL: ${SHOW_SQL}
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ${DIALECT}
    depends_on:
      - discovery-service
      - db_mysql
      - employee-service
      - inventory-stock-service
      - sale-service

  api-gateway:
    container_name: api-gateway-container
    image: api-gateway-image
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    ports:
      - "${API_GATEWAY_SERVICE_PORT}:${API_GATEWAY_SERVICE_PORT}"
    environment:
      SERVER_PORT: ${API_GATEWAY_SERVICE_PORT}
      DISCOVERY_SERVER_URL: ${DISCOVERY_SERVICE_EXTERNAL_URL}
    depends_on:
    # por cada microservicio cliente que se conecte a la API gateway, se debe agregar una dependencia
      - discovery-service
      - employee-service
      - inventory-stock-service
      - sale-service
      - authentication-service
volumes:
  mysql_data:
  postgres_data:

